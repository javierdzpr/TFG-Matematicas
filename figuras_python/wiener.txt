# wiener

import numpy as np
import matplotlib.pyplot as plt

# Ajustar tamaño de la fuente
plt.rcParams.update({
    "font.size": 14,        
    "axes.titlesize": 16,   
    "axes.labelsize": 14,   
    "xtick.labelsize": 14,  
    "ytick.labelsize": 14,  
    "legend.fontsize": 14   
})

# Fijamos una semilla para la reproducibilidad
np.random.seed(2)

# Declaramos los parámetros de la simulación
T = 1           # Tiempo máximo
N = 5000        # Número de pasos
dt = T / N
M = 5           # Número de trayectorias

# Simulación del movimiento browniano
t = np.linspace(0, T, N+1)
dW = np.sqrt(dt) * np.random.randn(M, N)   # Incrementos ~ N(0, dt)
W = np.zeros((M, N+1))
W[:,1:] = np.cumsum(dW, axis=1)            # Sumamos los incrementos

# Llamamos a la gráfica
plt.rcParams.update({"font.family": "DejaVu Sans"})
plt.figure(figsize=(8,5))
for i in range(M):
    plt.plot(t, W[i], lw=1.5)
plt.title("Trayectorias simuladas de un Proceso de Wiener")
plt.xlabel("Tiempo t",fontsize=14)
plt.ylabel("W(t)",fontsize=14)
plt.grid(True)
plt.ylim(-2,2)
plt.savefig("wiener.pdf", bbox_inches='tight')
plt.show()